{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","React","createElement","Fragment","className","role","type","msg","Navbar","concat","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","Textform","text","settext","useState","style","color","heading","onChange","event","target","value","backgroundColor","rows","handleupclick","newtext","toUpperCase","showAlert","handleupclick2","toLowerCase","handleclear","handlecopy","document","getElementById","select","console","log","navigator","clipboard","writeText","speak","SpeechSynthesisUtterance","window","speechSynthesis","split","length","prototype","PropTypes","string","App","setMode","setAlert","mesg","setTimeout","about","body","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.23f8d2bf.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        props.alert && <>\r\n            <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n                <strong>{props.alert.type}</strong>  : {props.alert.msg}\r\n\r\n                {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\nNavbar.prototype = {\r\n    title: PropTypes.string,\r\n\r\n}\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/About\">{props.about}</Link>\r\n          </li> */}\r\n         </ul>\r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form> */}\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-3`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark mode</label>\r\n</div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n  \r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function Textform(props) {\r\n    const handleupclick = () => {\r\n        // console.log(\"uppercase clicked\" + text);\r\n        let newtext = text.toUpperCase();\r\n        settext(newtext);\r\n        props.showAlert(\"Converted to upper case\",\"Success\")\r\n    }\r\n    const handleupclick2 = () => {\r\n        let newtext = text.toLowerCase();\r\n        settext(newtext);\r\n        props.showAlert(\"Converted to lower case\",\"Success\")\r\n    }\r\n    const handleclear = () => {\r\n        let newtext = \"\";\r\n        settext(newtext);\r\n        props.showAlert(\"text cleard\",\"Success\")\r\n    }\r\n    const speak = () => {\r\n        let msg = new SpeechSynthesisUtterance();\r\n        msg.text = text;\r\n        window.speechSynthesis.speak(msg);\r\n\r\n    }\r\n    const handlecopy = () => {\r\n        var text = document.getElementById('mybox');\r\n        text.select();\r\n        console.log('hello');\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"text has been copied\",\"Success\")\r\n    }\r\n    const handleonchange = (event) => {\r\n        // console.log(\"on change\");\r\n        settext(event.target.value);\r\n    }\r\n    const [text, settext] = useState('enter text here');\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className='container my-4' style={{ color: props.mode === 'dark' ? 'white' : 'black' }} >\r\n                <h4>{props.heading}</h4>\r\n\r\n                <textarea className='form-control ' id=\"mybox\" onChange={handleonchange} style={{ backgroundColor: props.mode === 'dark' ? 'black' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} value={text} rows=\"8\" ></textarea><br />\r\n                <button className=\"btn btn-primary\" onClick={handleupclick}>Convert to uppercase</button>\r\n                <button className='btn btn-primary mx-3' onClick={handleupclick2}>Convert to lowercase</button>\r\n                <button className='btn btn-primary mx-3' onClick={handleclear}>Clear text</button>\r\n                <button className='btn btn-primary mx-3' onClick={handlecopy}>copy text</button>\r\n                <button type='submit' className='btn btn-primary mx-3' onClick={speak}>Speak button</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h1>your text summery</h1>\r\n                <p>{text.split(\" \").length} words and {text.length} Characters</p>\r\n                <p>{0.008 * text.split(\" \").length} minutes to read this </p>\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","import './App.css';\nimport Alert from './components/Alert';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react';\n// import { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (mesg, type) => {\n    setAlert({\n      msg: mesg,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n\n  const toggleMode = () => {\n    console.log(\"hello\");\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert('Dark mode has been enabled', 'success');\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light mode has been enabled', 'success');\n    }\n  };\n  \n  \n \n  return (\n    <>\n    \n\n     \n\n<Navbar title=\"project\" about=\"About us\" mode={mode} toggleMode={toggleMode} />\n<Alert alert={alert} />\n<div className=\"container\">\n  {/* <Routes> */}\n\t\t\n\t\t {/* <Route exact path=\"/About\" element={ <About />}></Route>\t */}\n\t\t {/* <Route exact path=\"/\" element={ <Textform showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode} />}></Route>\t\n\t */}\n     <Textform showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode} />\t\n\t\n  \n  {/* </Routes> */}\n\n        </div>\n       \n        \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import {BrowserRouter} from 'react-router-dom';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  // <BrowserRouter>\n  <React.StrictMode>\n    <App />\n</React.StrictMode> \n// </BrowserRouter>\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}